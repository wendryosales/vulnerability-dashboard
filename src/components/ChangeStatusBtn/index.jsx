import PropTypes from 'prop-types';
import React, { useState } from 'react';
import Modal from '../Modal';
import Style from './ChangeStatusBtn.module.css';

function ChangeStatusBtn({
  dataVulnerability, vulnerability, index,
}) {
  const [confirmChange, setConfirmChange] = useState(false);
  return (
    <tr className={Style.container}>
      <td>{vulnerability.title}</td>
      <td>{vulnerability.severity}</td>
      <td>{vulnerability.cvss}</td>
      <td>{vulnerability.publication_date}</td>
      <td>{vulnerability.asset_count}</td>
      <td>{dataVulnerability[index].status === 1 ? 'Ativa' : 'Inativa'}</td>
      <td>
        {dataVulnerability[index].status === 1 ? (
          <button
            type="button"
            className={Style.unCheck}
            onClick={() => setConfirmChange(true)}
          >
            Desativar
          </button>
        )
          : (
            <button
              type="button"
              className={Style.check}
              onClick={() => setConfirmChange(true)}
            >
              Ativar
            </button>
          )}
      </td>
      {
        confirmChange && (
        <Modal
          idVulnerability={vulnerability.id}
          setConfirmChange={setConfirmChange}
          previouStatus={dataVulnerability[index].status}
        />
        )
      }
    </tr>
  );
}

ChangeStatusBtn.propTypes = {
  dataVulnerability: PropTypes
    .arrayOf(PropTypes.shape({
      id: PropTypes.number,
      title: PropTypes.string,
      severity: PropTypes.string,
      cvss: PropTypes.string,
      publication_date: PropTypes.string,
      asset_count: PropTypes.string,
      status: PropTypes.number,
    })),
  vulnerability: PropTypes.objectOf(PropTypes.string, PropTypes.number),
  index: PropTypes.number,
};

ChangeStatusBtn.defaultProps = {
  dataVulnerability: [{}],
  vulnerability: {},
  index: 0,
};

export default ChangeStatusBtn;
