import { REQUEST_CHANGE_STATUS } from './actionsTypes';
import BASE_URL from './BASE_URL';
import { fetchHostsDetails } from './hosts';

const requestChangeStatus = () => ({ type: REQUEST_CHANGE_STATUS });
const receiveChangeStatus = (response) => ({ type: `CHANGE_SUCESS:${response.status}` });

/**
Change Vulnerability Status
* @param {string} token
* @param {string} idVulnerability Vulnerability ID
* @param {string} idHost Host ID
* @param {number} status Options: 1 - active, 0 - inactive
*/
export default function changeStatus(token, idVulnerability, idHost, status) {
  const URL = `${BASE_URL}/api/vulnerability/${idVulnerability}/asset/${idHost}/update`;
  const body = { status };
  return async (dispatch) => {
    dispatch(requestChangeStatus());
    const response = await fetch(URL, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Token ${token}`,
      },
      body: JSON.stringify(body),
      redirect: 'follow',
    });
    dispatch(fetchHostsDetails(token, idHost));
    return dispatch(receiveChangeStatus(response));
  };
}
