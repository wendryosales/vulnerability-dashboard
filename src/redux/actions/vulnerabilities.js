import * as _ from './actionsTypes';
import BASE_URL from './BASE_URL';

const requestVulnerabilities = () => ({ type: _.REQUEST_VULNERABILITIES });
const receiveVulnerabilities = (vulnerabilities) => ({
  type: _.RECEIVE_VULNERABILITIES,
  value: vulnerabilities,
});

/**
* Vulnerabilities API requests. you can sort the results. Default: random.
* @param {string} token
* @summary Send object with the data request to the redux state.
* @param {string} order options: 'title', 'severity', 'cvss', 'asset_count' Default: random,
* @param {string} urlApi you can set a new URL for this request
*/
export default function fetchVulnerabilities(token, order, urlApi) {
  let URL = `${BASE_URL}/api/vulnerabilities/`;
  if (order) URL = `${BASE_URL}/api/vulnerabilities/?ordering=${order}`;
  if (urlApi) URL = urlApi;
  return async (dispatch) => {
    dispatch(requestVulnerabilities());
    const response = await fetch(URL, {
      method: 'get',
      headers: {
        Authorization: `Token ${token}`,
      },
    });
    const vulnerabilities = await response.json();
    return dispatch(receiveVulnerabilities(vulnerabilities));
  };
}

const requestBySeverity = () => ({ type: _.REQUEST_BY_SEVERITY });
const receiveBySeverity = (vulnerabilities) => ({
  type: _.RECEIVE_BY_SEVERITY,
  value: vulnerabilities,
});

/**
* Vulnerabilities By Severity API requests.
* @param {string} token
* @summary Send object with the data request to the redux state.
* @param {string} severity sort by severity 1-4
*/
export function fetchBySeverity(token, severity) {
  const URL = `${BASE_URL}/api/vulnerabilities/?severity=${severity}`;
  return async (dispatch) => {
    dispatch(requestBySeverity());
    const response = await fetch(URL, {
      method: 'get',
      headers: {
        Authorization: `Token ${token}`,
      },
    });
    const vulnerabilities = await response.json();
    return dispatch(receiveBySeverity(vulnerabilities));
  };
}

const requestByHosts = () => ({ type: _.REQUEST_BY_HOSTS });
const receiveByHosts = (vulnerabilities) => ({
  type: _.RECEIVE_BY_HOSTS,
  value: vulnerabilities,
});

/**
* Vulnerabilities By Hosts API requests.
* @summary Send object with the data request to the redux state.
* @param {string} token
* @param {string} id host ID
*/
export function fetchByHosts(token, id) {
  const URL = `${BASE_URL}/api/vulnerabilities/?asset=${id}`;
  return async (dispatch) => {
    dispatch(requestByHosts());
    const response = await fetch(URL, {
      method: 'get',
      headers: {
        Authorization: `Token ${token}`,
      },
    });
    const vulnerabilities = await response.json();
    return dispatch(receiveByHosts(vulnerabilities));
  };
}
